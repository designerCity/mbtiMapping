Row(
                children: [
                  SingleChildScrollView(
                  // scrollDirection: Axis.horizontal,
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.center,
                      children: [
                        Container(
                          margin: EdgeInsets.only(top : MediaQuery.of(context).size.height * 0.05),
                          width: MediaQuery.of(context).size.width * 0.4,
                          height: MediaQuery.of(context).size.height * 2,
                          child: Stack(
                              children: [
                                /// 뒷 사각형(가로가 1일 때, 0.5일때)
                                Positioned(
                                  top: MediaQuery.of(context).size.height * 0.1,
                                  left: MediaQuery.of(context).size.width * 0.1,
                                  child: Material(
                                    child: Container(
                                      height: MediaQuery.of(context).size.height,
                                      width: MediaQuery.of(context).size.width * 0.9 * containerWidth,
                                      decoration: BoxDecoration(
                                        // color: Colors.black.withOpacity(0.6),
                                        color: Colors.white.withOpacity(0.3),
                                        borderRadius: BorderRadius.circular(2),
                                        boxShadow: [
                                          BoxShadow(
                                            color: Colors.grey.withOpacity(0.1),
                                            offset: Offset(-10, 10),
                                            blurRadius: 20,
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                ),
                                /// 10분당 구분선
                                for (int i = 1; i <= 1; i++)
                                  Positioned(
                                    top: MediaQuery.of(context).size.height * 0.1,
                                    left: MediaQuery.of(context).size.width * (0.1 / 3 + 0.3  * i),
                                    child: Container(
                                      width: 2,
                                      height: MediaQuery.of(context).size.height,
                                      color: Colors.black.withOpacity(0.2),
                                    ),
                                  ),
                                /// timeBlock
                                ...List.generate(SameOrDif.length, (placeIndex) {
                                // ...List.generate(data, (placeIndex) {
                                  print('placeIndex: ${placeIndex}');
                                  List<Widget> widgetList = [];
                                  var widget;

                                  if (SameOrDif[placeIndex] == 0) {
                                    var colorIdx = placeIndex;

                                    Color col = generateRandomColor();
                                    colorList.add(col);
                                    conlongList.add(data[placeIndex+1][0] - data[placeIndex][0] + 1);

                                    /// 0 vs 1 일때 나누기
                                    List.generate(data[placeIndex+1][0] - data[placeIndex][0] + 1, (index) {
                                      /// 같은 장소에 대한 정보
                                      if (SameOrDif[placeIndex] == 0) {
                                        /// width 크기 측정
                                        var widthValue;
                                        if (index == 0) {
                                          /// 시간이 같을 때 vs 같지 않을 때
                                          if (data[placeIndex+1][0] == data[placeIndex][0]) {
                                            widthValue = MediaQuery.of(context).size.width * 0.15 * (data[placeIndex+1][1] - data[placeIndex][1]) / 10;
                                          } else {
                                            widthValue = MediaQuery.of(context).size.width * 0.15 * (60 - data[placeIndex + index][1]) / 10;
                                          }
                                        } else if (index < data[placeIndex + 1][0] - data[placeIndex][0]) {
                                          widthValue = MediaQuery.of(context).size.width * 0.9;
                                        } else {
                                          widthValue = MediaQuery.of(context).size.width * 0.15 * (data[placeIndex + 1][1]) / 10;
                                        }

                                        var timeText;
                                        timeText = Positioned(
                                          top:  MediaQuery.of(context).size.height * 0.05 * (data[placeIndex][0] + index), /// 시간
                                          left: MediaQuery.of(context).size.width * 0.03,
                                          child: Text('${data[placeIndex][0] + index}'),
                                        );
                                        widgetList.add(timeText);
                                        /// index 가 0 일때, left 를 다르게 처리해야 할 것 같다.
                                        widget = Positioned(
                                          /// 빈 부분
                                            top:  MediaQuery.of(context).size.height * 0.05 * (data[placeIndex][0] + index), /// 시간
                                            left: index == 0
                                                ? MediaQuery.of(context).size.width * ((0.15 * data[placeIndex][1] / 10) + 0.1) * containerWidth + MediaQuery.of(context).size.width * 0.1 / 3
                                                : MediaQuery.of(context).size.width * 0.1 * containerWidth + MediaQuery.of(context).size.width * 0.1 / 3,
                                            // left: MediaQuery.of(context).size.width * 0.14 * (data[placeIndex][1] / 10),     ///  분
                                            child: GestureDetector(
                                              onTap: () {
                                                /// 장소 연결하기
                                                print('Container Clicked!${(placeIndex / 2 + 1).toInt()}번째 장소');
                                              },
                                              child: Container(
                                                decoration: BoxDecoration(
                                                  color: col, /// 여기서 색깔 고정하게 만들어야 함.
                                                  borderRadius: BorderRadius.circular(40),
                                                ),
                                                width: widthValue * containerWidth,
                                                height: MediaQuery.of(context).size.height * 0.04,
                                              ),
                                            )
                                        );
                                        widgetList.add(widget);
                                      }
                                    });
                                  }
                                  return Stack(
                                    children: widgetList,
                                  );
                                })
                              ]
                          ),
                        ),
                      ]
                  )
                              ),
                  /// (우측 부분) stack 으로 변경해야 하는 것
                  SingleChildScrollView(
                    child: Column(
                        crossAxisAlignment: CrossAxisAlignment.center,
                      children: [Container(
                        width: MediaQuery.of(context).size.width * 0.6,
                        height: MediaQuery.of(context).size.height * 2,
                        child: Stack(
                          fit: StackFit.expand,
                          children: List.generate(
                            colorList.length,
                                (index) => Positioned(
                                  top: MediaQuery.of(context).size.width * 0.1 + 100 * index.toDouble(),  // Adjust the top position based on the index
                                  left: (index % 2 == 0) ? 100 : 10,
                                  child: Stack(
                                    children: [
                                      GestureDetector(
                                        onTap: () {
                                          setState(() {
                                            // isInfoWindowVisible[index] = !isInfoWindowVisible[index];
                                            isInfoWindowVisible != isInfoWindowVisible;
                                          });
                                          // 클릭 시 인포 윈도우를 표시
                                          _showInfoWindow(context, index);
                                        },
                                        child: Transform.rotate(
                                          angle: (index % 2 == 0) ? 15 * 3.141592653589793 / 180 : -15 * 3.141592653589793 / 180 ,
                                          child: Container(
                                            margin: EdgeInsets.only(top: MediaQuery.of(context).size.height * 0.01),
                                            width: MediaQuery.of(context).size.width * 0.4 * (0.23 * conlongList[index]),
                                                // .clamp(MediaQuery.of(context).size.width * 0.01, MediaQuery.of(context).size.width * 0.4),
                                            height: MediaQuery.of(context).size.height * 0.25 * (0.23 * conlongList[index]),
                                                // .clamp(MediaQuery.of(context).size.height * 0.01, MediaQuery.of(context).size.height * 0.1),
                                            decoration: BoxDecoration(
                                              // color: colorList[index].withOpacity(0.3),
                                              color: colorList[index].withOpacity(1.0),
                                              borderRadius: BorderRadius.circular(30),
                                            ),
                                          ),
                                        ),
                                      ),
                                      if (isInfoWindowVisible)
                                        Positioned(
                                          top: (index > 2) ? 0 : null, // If index is even, set top to 0, otherwise let it be null
                                          bottom: (index <= 2 ) ? 0 : null, // If index is odd, set bottom to 0, otherwise let it be null
                                          left: 0,
                                          child: Container(
                                            width: 50,
                                            height: 50,
                                            color: Colors.blue,
                                          ),
                                        ),
                                    ]
                                  )
                              ),
                          ),
                        ),
                      ),]
                    ),
                  )
                ],
              )
